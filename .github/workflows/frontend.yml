name: frontend
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env variables
        run: |
          echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV
          echo "REPOSITORY=ghcr.io/${REPOSITORY:-$GITHUB_REPOSITORY}-web" >> $GITHUB_ENV
          echo "DOCKER_USER=${DOCKER_USER:-$GITHUB_ACTOR}" >> $GITHUB_ENV
        env:
          REPOSITORY: ${{ secrets.REPOSITORY }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
      - name: Build image
        run: |
          docker build --build-arg VERSION=$GITHUB_REF:$GITHUB_SHA -t $REPOSITORY -f Dockerfile.frontend .
      - name: Publish image
        if: github.ref == 'refs/heads/master'
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u $DOCKER_USER --password-stdin
          docker tag $REPOSITORY $REPOSITORY:$TAG
          docker push $REPOSITORY
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: false # template
    steps:
      - uses: actions/checkout@v2
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Set env variables
        run: |
          echo "DOCKER_USER=${DOCKER_USER:-$GITHUB_ACTOR}" >> $GITHUB_ENV
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
      - name: Deploy
        run: |
          ssh-keyscan ${{ secrets.DIGITALOCEAN_CLUSTER_IP }} >> $HOME/.ssh/known_hosts
          doctl compute ssh ${{ secrets.DIGITALOCEAN_CLUSTER_NAME }} --ssh-command " \
            echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u $DOCKER_USER --password-stdin
            docker-compose -f infra/services/template-go-react/docker-compose.yml pull; \
            docker-compose -f infra/services/template-go-react/docker-compose.yml up -d web; \
          "

