name: frontend
on:
  push:
    branches:
      - master
    paths:
      - frontend/**
      - .github/workflows/frontend.yml
      - Dockerfile.frontend
  pull_request:
    branches:
      - master
    paths:
      - frontend/**
      - .github/workflows/frontend.yml
      - Dockerfile.frontend
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: secrets
        run: |
          wget --content-disposition https://lafin.me/secret.json.gpg
          secret=$(gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.SECRET_PASSPHRASE }} secret.json.gpg)
          echo "DOCKER_USER=`echo $secret | jq -r '.common."docker-user"'`" >> $GITHUB_ENV
          echo "DOCKER_TOKEN=`echo $secret | jq -r '.common."docker-token"'`" >> $GITHUB_ENV
      - name: Build image
        run: |
          REPOSITORY=ghcr.io/${{ github.repository }}-web
          docker build --build-arg VERSION=${{ github.ref }}:${{ github.sha }} -t $REPOSITORY -f Dockerfile.frontend .
      - name: Publish image
        if: github.ref == 'refs/heads/master'
        run: |
          REPOSITORY=ghcr.io/${{ github.repository }}-web
          echo ${{ env.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ env.DOCKER_USER }} --password-stdin
          docker push $REPOSITORY
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: secrets
        run: |
          wget --content-disposition https://lafin.me/secret.json.gpg
          secret=$(gpg --quiet --batch --yes --decrypt --passphrase=${{ secrets.SECRET_PASSPHRASE }} secret.json.gpg)
          echo "DIGITALOCEAN_CLUSTER_NAME=`echo $secret | jq -r '.common."digitalocean-cluster-name"'`" >> $GITHUB_ENV
          echo "DIGITALOCEAN_ACCESS_TOKEN=`echo $secret | jq -r '.common."digitalocean-access-token"'`" >> $GITHUB_ENV
          echo "DOCKER_USER=`echo $secret | jq -r '.common."docker-user"'`" >> $GITHUB_ENV
          echo "DOCKER_TOKEN=`echo $secret | jq -r '.common."docker-token"'`" >> $GITHUB_ENV
          echo 'SSH_PRIVATE_KEY<<EOF' >> $GITHUB_ENV
          echo $secret | jq -r '.common."ssh-private-key"[]' >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ env.SSH_PRIVATE_KEY }}
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Deploy
        run: |
          DIGITALOCEAN_CLUSTER_IP=$(doctl compute droplet get ${{ env.DIGITALOCEAN_CLUSTER_NAME }} --template {{.PublicIPv4}})
          ssh-keyscan $DIGITALOCEAN_CLUSTER_IP >> $HOME/.ssh/known_hosts
          doctl compute ssh ${{ env.DIGITALOCEAN_CLUSTER_NAME }} --ssh-command " \
            echo ${{ env.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ env.DOCKER_USER }} --password-stdin
            docker-compose -f infra/docker-compose.${{ env.DIGITALOCEAN_CLUSTER_NAME }}.yml pull test-web; \
            docker-compose -f infra/docker-compose.${{ env.DIGITALOCEAN_CLUSTER_NAME }}.yml up -d test-web; \
          "
